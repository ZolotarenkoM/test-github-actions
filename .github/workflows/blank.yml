# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  push:
    branches: ["main"]
  workflow_dispatch:
    inputs:
      deploy:
        description: "Apply configuration?"
        required: true
        type: boolean

env:
  AWS_REGION: eu-central-1
  ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY }}
  NODE_OPTIONS: '--max_old_space_size=4096'
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  auto_test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      #- uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver: docker

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Check image in Amazon ECR
        id: check-image
        env:
          IMAGE: "${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:0.0.1-d382478-master"
        shell: bash
        run: |
          aws ecr describe-images --registry-id 502545620092 --repository-name ml-rtmp-server-edge  --image-ids imageTag=0.0.1-d382478-master

      - name: Run test 1
        id: step1
        run: |
          echo Hello, world!

      - name: Run test 2
        id: step2
        run: |
          echo hello 
          
    outputs:
      test_conclusion: ${{ steps.auto_test.outputs.result }}
        
        
#  upload:
#    runs-on: ubuntu-latest
#    needs: auto_test
#    steps:
#      - name: Run
#        if: ${{ steps.auto_test.outputs.test_conclusion }}
#        run: echo RUNNING LAST STAGE! 
